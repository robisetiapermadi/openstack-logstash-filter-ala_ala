  filter {

      grok {
        match => { "message" => "%{TIMESTAMP_ISO8601:system.timestamp}"}
      }

      #grok {
      #  match => { "message" => "%{TIMESTAMP_ISO8601:system.timestamp.precision}"}
      #}

      # set timestamp
      #date {
      #  match => [ "system.timestamp" , "ISO8601" ]
      #}

      date {
        match => ["message", "yyyy-MM-dd’T’HH:mm:ss.SSSSSSS"]
        target => "system.timestamp.coba"
      }

      if [fields][log_type] == "system.syslog" {
        mutate {
          add_tag => [ "syslog" ]
        }
    
      }

      if [fields][log_type] == "system.auth" {
        mutate {
          add_tag => [ "auth" ]
        }

        # get program name/pid
        grok {
          match => { "message" => "%{TIMESTAMP_ISO8601:temp} %{SYSLOGHOST:temp} %{DATA:system.program}?(\[%{POSINT:system.pid}\])?:"}
          remove_field => [ "temp" ]
        }

        if [system.program] =="sshd"{
            grok {
              patterns_dir   => ["etc/logstash/patterns.d"]
              match => { "message" => "%{SSH_AUTH_SUCCESS}" }
              add_field => { "system.auth.result" => "success" "system.auth.type" => "login" }
              #add_tag => [ "_grok_sshd_success", "matched" ]
              remove_field => [ "temp" ]
            }
            grok {
              patterns_dir   => ["etc/logstash/patterns.d"]
              match => { "message" => "%{SSH_AUTHFAIL_WRONGCREDS}" }
              add_field => { "system.auth.result" => "fail" "system.auth.fail.reason" => "wrong_credentials" "system.auth.type" => "login" }
              #add_tag => [ "_grok_sshd_success", "matched" ]
            }
            grok {
              patterns_dir   => ["etc/logstash/patterns.d"]
              match => { "message" => "%{SSH_AUTHFAIL_WRONGUSER}" }
              add_field => { "system.auth.result" => "fail" "system.auth.fail.reason" => "unknown_user" "system.auth.type" => "login" }
              #add_tag => [ "_grok_sshd_success", "matched" ]
            }
            grok {
              patterns_dir   => ["etc/logstash/patterns.d"]
              match => { "message" => "%{SSH_DISCONNECT}" }
              add_field => { "system.auth.result" => "success" "system.auth.type" => "logout" }
              add_tag => [ "_grok_sshd_success", "matched", "ssh_disconnect" ]
              remove_field => [ "temp" ]
            }
            mutate {
              remove_tag => [ "matched", "_grokparsefailure" ]
            }

            geoip {
		          source => "system.auth.ip"
              #add_field => [ "[geoip][location]", "%{[geoip][longitude]}" ]
              #add_field => [ "[geoip][location]", "%{[geoip][latitude]}"  ]
	          }
        }
      }
  }
