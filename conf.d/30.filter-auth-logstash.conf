  filter {
      if [fields][log_type] == "syslog" {
        mutate {
          add_tag => [ "syslog" ]
        }
    
      }

      if [fields][log_type] == "auth" {
        mutate {
          add_tag => [ "auth" ]
        }

        grok {
          match => { "message" => "%{SYSLOGTIMESTAMP:system.auth.timestamp} %{SYSLOGHOST:system.hostname} %{DATA:system.program}\[%{POSINT:system.pid}\]"}
          remove_field => [ "system.auth.timestamp", "system.hostname" ]
        }

        if [system.program] =="sshd"{
            grok {
              patterns_dir   => ["etc/logstash/patterns.d"]
              match => { "message" => "%{SSH_AUTH_SUCCESS}" }
              add_field => { 
                            "system.auth.result" => "success",
                            "system.auth.type" => "login" 
                           }
              add_tag => [ "_grok_sshd_success", "matched" ]
            }
            grok {
              patterns_dir   => ["etc/logstash/patterns.d"]
              match => { "message" => "%{SSH_AUTHFAIL_WRONGCREDS}" }
              add_field => { "system.auth.result" => "fail" "system.auth.fail.reason" => "wrong_credentials" }
              add_tag => [ "_grok_sshd_success", "matched" ]
            }
            grok {
              patterns_dir   => ["etc/logstash/patterns.d"]
              match => { "message" => "%{SSH_AUTHFAIL_WRONGUSER}" }
              add_field => { "system.auth.result" => "fail" "system.auth.fail.reason" => "unknown_user" }
              add_tag => [ "_grok_sshd_success", "matched" ]
            }
            grok {
              patterns_dir   => ["etc/logstash/patterns.d"]
              match => { "message" => "%{SSH_DISCONNECT}" }
              add_field => { 
                            "system.auth.result" => "success",
                            "system.auth.type" => "logout" 
                           }
              add_tag => [ "_grok_sshd_success", "matched", "ssh_disconnect" ]
            }
            mutate {
              remove_tag => [ "matched", "_grokparsefailure" ]
            }
        }
      }
  }
